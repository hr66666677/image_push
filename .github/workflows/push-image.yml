name: 自动检测并推送所有 Docker 镜像 tar 包
on:
  push:
    branches: [ main ]  

jobs:
  auto-push-tar-images:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4

      - name: 扫描所有 Docker 镜像 tar 包
        id: list_tar_files
        run: |
          # 正确语法：用 $() 赋值，去掉多余符号
          TAR_FILES=$(find . -type f -name "*.tar" | grep -v "non-image")  
          echo "tar_files=$TAR_FILES" >> $GITHUB_OUTPUT
          echo "找到的 tar 文件: $TAR_FILES"  # 调试用

      - name: 加载 Docker 构建环境
        uses: docker/setup-buildx-action@v3
        if: steps.list_tar_files.outputs.tar_files != ''

      - name: 登录镜像仓库
        uses: docker/login-action@v3
        if: steps.list_tar_files.outputs.tar_files != ''
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 批量推送 tar 镜像包
        if: steps.list_tar_files.outputs.tar_files != ''
        run: |
          for TAR_FILE in ${{ steps.list_tar_files.outputs.tar_files }}; do
            echo "=== 处理 $TAR_FILE ==="
            docker load -i $TAR_FILE || exit 1  # 加载失败则终止
            IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1)
            BASE_NAME=$(basename "$TAR_FILE" .tar)
            NEW_TAG="ghcr.io/${{ github.repository_owner }}/$BASE_NAME:latest"
            docker tag "$IMAGE_NAME" "$NEW_TAG" || exit 1
            docker push "$NEW_TAG" || exit 1
          done
